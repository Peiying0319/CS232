1. Which order performs the worst? Why? Please write down the latency captured by time for the worst order.
	A: ijk performs the worst (0m0.056s)

2. Which order performs the best? Why? Please write down the latency captured by time for the best best.
	A: ikj performs the best (0m0.16s)

3. Does the way we stride through the matrices with respect to the innermost loop affect performance?
	A:	ijk: C stride 0, A stride n, B stride 1 (0 + n + 1)
			ikj: C stride n, A stride 0, B stride n (worst) (n + 0 + n)
			jki: C stride 1, A stride 1, B stride 0 (best) (1 + 1 + 0)

4. Please complete the following table using valgrind to measure D1 miss rate with regard to different matrix size.
________________________________________________________________________________
|Cache miss w.r.t matrix size		|1024		|512		|256		|128		|64			|32
|-------------------------------------------------------------------------------|
|matrix_mult_ijk								|31.2%	|31.4%	|29.0%	|30.6%	|30.3%	|30.6%
|-------------------------------------------------------------------------------|
|matrix_mult_jki								|75.8%	|67.6%	|74.3%	|69.9%	|56.0%	|70.9%
|-------------------------------------------------------------------------------|
|matrix_mult_ikj								|92.1%	|77.1%	|75.8%	|82.2%	|75.1%	|74.3%
|_______________________________|_______|_______|_______|_______|_______|_______|

5. Based on the table of q4, does the size of the matrix affect performance? Why? Have you noticed the
cache miss rate dramatically changes upon a certain dim size? What is the size of the matrix when
it happens? and why would it happen?
	A: I don't see any obvious affect.
